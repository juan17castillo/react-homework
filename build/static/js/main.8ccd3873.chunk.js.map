{"version":3,"sources":["config/firebase.js","components/Venues/ListVenues.js","components/Venues/Venues.js","components/Navbar.js","components/Home.js","config/es.js","components/Venues/CreateVenue.js","components/Venues/UpdateVenue.js","components/Venues/MasterVenue.js","components/Error.js","components/Login.js","components/SingUp.js","components/UpdateUser.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ListVenues","state","venues","db","firestore","delete","onDelete","venueId","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","collection","doc","window","location","reload","this","get","snapshot","forEach","data","id","push","update","setState","catch","error","console","log","props","logged","className","scope","map","venue","idUpdate","name","address","city","to","pathname","activeClassName","onClick","Component","Venues","Navbar","auth","signOut","type","data-bs-toggle","logout","Home","undefined","Fragment","es","accepted","after","after_or_equal","alpha","array","before","before_or_equal","between","boolean","date","date_equals","email","in","integer","max","min","not_in","not_regex","numeric","regex","required","size","string","url","CreateVenue","nameRef","React","createRef","phoneRef","emailRef","cityRef","addressRef","zipCodeRef","activeRef","changeState","current","value","phone","zipCode","active","saveVenue","e","preventDefault","validator","allValid","set","setTimeout","href","showMessages","forceUpdate","SimpleReactValidator","addLocale","locale","onSubmit","htmlFor","ref","onChange","placeholder","message","UpdateVenue","updateVenue","match","params","exists","MasterVenue","users","query","filteredQuery","filterNames","filter","user","includes","where","aria-label","event","target","lastName","Error","Login","passwordRef","password","loginUser","signInWithEmailAndPassword","sha256","toString","res","err","SingUp","lastNameRef","passwordConfirmedRef","validUntilRef","campusRef","singedUp","campusId","passwordConfirmed","validUntil","saveUser","createUserWithEmailAndPassword","uid","UpdateUser","updateUser","userId","idUser","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8hBAceA,E,OAFFC,EAASC,cAVC,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,gBACnBC,MAAO,+C,yBC2FMC,E,4MA5FbC,MAAQ,CACNC,OAAQ,KACRC,GAAIZ,EAAKa,YACTC,QAAQ,G,EAqBVC,SAAW,SAACC,GACVC,IAAKjB,KAAK,CACRkB,MAAO,uCACPC,KAAM,kCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,kBAClBC,MAAK,SAACC,GACHA,EAAOC,cACT,EAAKjB,MAAME,GAAGgB,WAAW,UAAUC,IAAIb,GAASF,SAChDgB,OAAOC,SAASC,QAAO,Q,uDA9B7B,WAAqB,IAAD,OAClBC,KAAKvB,MAAME,GACRgB,WAAW,UACXM,MACAT,MAAK,SAACU,GACL,IAAMxB,EAAS,GACfwB,EAASC,SAAQ,SAACP,GAChB,IAAMQ,EAAI,2BAAQR,EAAIQ,QAAZ,IAAoBC,GAAIT,EAAIS,KACtC3B,EAAO4B,KAAKF,GACZ,EAAK3B,MAAME,GAAGgB,WAAW,UAAUC,IAAIA,EAAIS,IAAIE,OAAO,CACpDxB,QAASa,EAAIS,QAGjB,EAAKG,SAAS,CAAE9B,OAAQA,OAEzB+B,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,oBAoBlC,WAAU,IAAD,OACP,OAAIV,KAAKa,MAAMC,OAIb,wBAAOC,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCACGhB,KAAKvB,MAAMC,QACVsB,KAAKvB,MAAMC,OAAOuC,KAAI,SAACC,GACrB,IAAMb,EAAK,SAAWa,EAAMb,GACtBc,EAAW,eAAiBD,EAAMb,GACxC,OACE,+BACE,oBAAIU,UAAU,eAAd,SAA8BG,EAAME,OACpC,oBAAIL,UAAU,eAAd,SAA8BG,EAAMG,UACpC,oBAAIN,UAAU,eAAd,SAA8BG,EAAMI,OACpC,+BACE,eAAC,IAAD,CACEP,UAAU,uBACVQ,GAAI,CAACC,SAASnB,EAAI5B,MAAM,CAACqC,OAAQ,EAAKD,MAAMC,SAC5CW,gBAAgB,SAHlB,UAKG,IACD,mBAAGV,UAAU,kBAEf,cAAC,IAAD,CAASA,UAAU,uBAAuBQ,GAAI,CAACC,SAASL,EAAU1C,MAAM,CAACqC,OAAQ,EAAKD,MAAMC,SAA5F,SACE,mBAAGC,UAAU,kBAEf,wBACEA,UAAU,iBACVW,QAAS,kBAAM,EAAK5C,SAASoC,EAAMb,KAFrC,SAIE,mBAAGU,UAAU,wBApBVG,EAAMb,YAlBlB,cAAC,IAAD,CAAUkB,GAAG,e,GA5CDI,aCsBVC,EAxBA,SAACf,GAEd,OAAGA,EAAMC,OAEL,gCACE,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,GAAd,mBACA,cAAC,IAAD,CACEA,UAAU,uBACVQ,GAAI,CAACC,SAAS,eAAgB/C,MAAM,CAACqC,OAAQD,EAAMC,SACnDW,gBAAgB,SAHlB,2BAQF,cAAC,EAAD,CAAYX,OAAQD,EAAMC,YAIvB,cAAC,IAAD,CAAUS,GAAG,YCgCTM,E,4JAlDb,WACE9D,EAAK+D,OAAOC,Y,oBAGd,WACE,OACE,qBAAKhB,UAAU,8DAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAASA,UAAU,eAAeQ,GAAG,IAAIE,gBAAgB,SAAzD,qCAIA,wBACEV,UAAU,iBACViB,KAAK,SACLC,iBAAe,WAHjB,SAKE,sBAAMlB,UAAU,0BAGlB,sBAAKA,UAAU,2BAAf,UACE,oBAAIA,UAAU,qBAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVQ,GAAG,QACHE,gBAAgB,SAHlB,wBASJ,oBAAIV,UAAU,aAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVQ,GAAG,IACHE,gBAAgB,SAChBC,QAAS1B,KAAKkC,OAJhB,8C,GAnCKP,aC0BNQ,E,4MAtBb1D,MAAM,CACJqC,QAAO,G,4CAGT,WACE,YAAiCsB,IAA9BpC,KAAKa,MAAMf,SAASrB,OAAwBuB,KAAKa,MAAMf,SAASrB,MAAMqC,OAKvE,eAAC,IAAMuB,SAAP,WACE,cAAC,EAAD,IAEA,qBAAKtB,UAAU,YAAf,SACE,kCACE,cAAC,EAAD,CAAQD,OAAQd,KAAKvB,MAAMqC,iBATjCd,KAAKQ,SAAS,CAACM,QAAO,IACf,cAAC,IAAD,CAAUS,GAAG,gB,GATPI,a,iBC8BFW,EApCL,CACRC,SAAuB,gCACvBC,MAAuB,mDACvBC,eAAuB,2DACvBC,MAAuB,2CAMvBC,MAAuB,mCACvBC,OAAuB,kDACvBC,gBAAuB,0DACvBC,QAAuB,qDACvBC,QAAuB,6DAIvBC,KAAuB,wCACvBC,YAAuB,+CACvBC,MAAuB,uCACvBC,GAAuB,qCACvBC,QAAuB,2CACvBC,IAAuB,4CACvBC,IAAuB,6DACvBC,OAAuB,qCACvBC,UAAuB,mDACvBC,QAAuB,mCAEvBC,MAAuB,2CACvBC,SAAuB,sCACvBC,KAAuB,kDACvBC,OAAuB,yDAEvBC,IAAuB,yCCgKZC,E,kDA1Lb,aAAe,IAAD,8BACZ,gBAKFC,QAAUC,IAAMC,YANF,EAOdC,SAAWF,IAAMC,YAPH,EAQdE,SAAWH,IAAMC,YARH,EASdG,QAAUJ,IAAMC,YATF,EAUdI,WAAaL,IAAMC,YAVL,EAWdK,WAAaN,IAAMC,YAXL,EAYdM,UAAYP,IAAMC,YAZJ,EAcdzF,MAAQ,CACNyC,MAAO,GACPvC,GAAIZ,EAAKa,aAhBG,EAmBd6F,YAAc,WACZ,EAAKjE,SAAS,CACZU,MAAO,CACLE,KAAM,EAAK4C,QAAQU,QAAQC,MAC3BC,MAAO,EAAKT,SAASO,QAAQC,MAC7BzB,MAAO,EAAKkB,SAASM,QAAQC,MAC7BrD,KAAM,EAAK+C,QAAQK,QAAQC,MAC3BtD,QAAS,EAAKiD,WAAWI,QAAQC,MACjCE,QAAS,EAAKN,WAAWG,QAAQC,MACjCG,OAAQ,EAAKN,UAAUE,QAAQC,UA5BvB,EAiCdI,UAAY,SAACC,GACXA,EAAEC,iBACF,EAAKR,cACD,EAAKS,UAAUC,YACjB,EAAK1G,MAAME,GAAGgB,WAAW,UAAUC,MAAMwF,IAAI,EAAK3G,MAAMyC,OACxDmE,YAAW,WACTxF,OAAOC,SAASwF,KAAO,UACtB,OAEH,EAAKJ,UAAUK,eACf,EAAKC,gBAzCPC,IAAqBC,UAAU,KAAMpD,GACrC,EAAK4C,UAAY,IAAIO,IAAqB,CAAEE,OAAQ,OAHxC,E,0CA+Cd,WACE,YAAiCvD,IAA9BpC,KAAKa,MAAMf,SAASrB,OAAwBuB,KAAKa,MAAMf,SAASrB,MAAMqC,OAKvE,gCACE,cAAC,EAAD,IACA,sBAAKC,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,wBACA,qBAAKA,UAAU,2BAAf,SACE,uBAAM6E,SAAU5F,KAAK+E,UAArB,UACE,sBAAKhE,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,OAAf,oBACA,uBACE7D,KAAK,OACLjB,UAAU,eACVK,KAAK,OACL0E,IAAK9F,KAAKgE,QACV+B,SAAU/F,KAAKyE,YACfuB,YAAY,mBAEbhG,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMyC,MAAME,KACjB,+BAGJ,sBAAKL,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,QAAf,yBACA,uBACE7D,KAAK,MACLjB,UAAU,eACVK,KAAK,QACL0E,IAAK9F,KAAKmE,SACV4B,SAAU/F,KAAKyE,YACfuB,YAAY,wBAEbhG,KAAKkF,UAAUe,QACd,cACAjG,KAAKvB,MAAMyC,MAAM0D,MACjB,wBAIN,sBAAK7D,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,QAAf,mBACA,uBACE7D,KAAK,QACLjB,UAAU,eACVK,KAAK,QACL0E,IAAK9F,KAAKoE,SACV2B,SAAU/F,KAAKyE,YACfuB,YAAY,UAEbhG,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMyC,MAAMgC,MACjB,qBAGJ,sBAAKnC,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,UAAf,0BACA,uBACE7D,KAAK,OACLjB,UAAU,eACVK,KAAK,UACL0E,IAAK9F,KAAKsE,WACVyB,SAAU/F,KAAKyE,YACfuB,YAAY,yBAEbhG,KAAKkF,UAAUe,QACd,eACAjG,KAAKvB,MAAMyC,MAAMG,QACjB,kBAIN,sBAAKN,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,OAAf,oBACA,uBACE7D,KAAK,OACLjB,UAAU,eACV+E,IAAK9F,KAAKqE,QACV0B,SAAU/F,KAAKyE,YACfrD,KAAK,OACL4E,YAAY,SAEbhG,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMyC,MAAMI,KACjB,eAGJ,sBAAKP,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,UAAf,2BACA,uBACE7D,KAAK,OACLjB,UAAU,eACVK,KAAK,UACL0E,IAAK9F,KAAKuE,WACVwB,SAAU/F,KAAKyE,YACfuB,YAAY,WAEbhG,KAAKkF,UAAUe,QACd,gBACAjG,KAAKvB,MAAMyC,MAAM2D,QACjB,0BAIN,qBAAK9D,UAAU,aAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACEA,UAAU,mBACVK,KAAK,SACL0E,IAAK9F,KAAKwE,UACVuB,SAAU/F,KAAKyE,YACfzC,KAAK,aAEP,uBAAOjB,UAAU,mBAAmB8E,QAAQ,SAA5C,yBAKJ,wBAAQ7D,KAAK,SAASjB,UAAU,kBAAhC,mCA7HD,cAAC,IAAD,CAAUQ,GAAG,e,GAnDAI,aC6MXuE,E,kDA5Mb,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IAKRmD,QAAUC,IAAMC,YANG,EAOnBC,SAAWF,IAAMC,YAPE,EAQnBE,SAAWH,IAAMC,YARE,EASnBG,QAAUJ,IAAMC,YATG,EAUnBI,WAAaL,IAAMC,YAVA,EAWnBK,WAAaN,IAAMC,YAXA,EAYnBM,UAAYP,IAAMC,YAZC,EAcnBzF,MAAQ,CACNyC,MAAO,GACPvC,GAAIZ,EAAKa,aAhBQ,EAmBnB6F,YAAc,WACZ,EAAKjE,SAAS,CACZU,MAAO,CACLE,KAAM,EAAK4C,QAAQU,QAAQC,MAC3BC,MAAO,EAAKT,SAASO,QAAQC,MAC7BzB,MAAO,EAAKkB,SAASM,QAAQC,MAC7BrD,KAAM,EAAK+C,QAAQK,QAAQC,MAC3BtD,QAAS,EAAKiD,WAAWI,QAAQC,MACjCE,QAAS,EAAKN,WAAWG,QAAQC,MACjCG,OAAQ,EAAKN,UAAUE,QAAQC,UA5BlB,EAkDnBwB,YAAc,SAACnB,GACbA,EAAEC,iBACF,EAAKR,cACL,IAAIpE,EAAK,EAAKQ,MAAMuF,MAAMC,OAAOlF,SAC7B,EAAK+D,UAAUC,YACjB,EAAK1G,MAAME,GAAGgB,WAAW,UAAUC,IAAIS,GAAI+E,IAA3C,2BAAmD,EAAK3G,MAAMyC,OAA9D,IAAqEnC,QAASsB,KAC9EgF,YAAW,WACTxF,OAAOC,SAASwF,KAAO,UACtB,OAEH,EAAKJ,UAAUK,eACf,EAAKC,gBA3DPC,IAAqBC,UAAU,KAAMpD,GACrC,EAAK4C,UAAY,IAAIO,IAAqB,CAAEE,OAAQ,OAHnC,E,qDAiCnB,WAAqB,IAAD,OACd5G,EAAUiB,KAAKa,MAAMuF,MAAMC,OAAOlF,SACtCnB,KAAKvB,MAAME,GACRgB,WAAW,UACXC,IAAIb,GACJkB,MACAT,MAAK,SAACI,GACL,GAAIA,EAAI0G,OAAQ,CACd,IAAIpF,EACJA,EAAQtB,EAAIQ,OACZ,EAAKI,SAAS,CAAEU,MAAOA,SAEvBP,QAAQC,IAAI,0B,oBAoBpB,WACE,YAAiCwB,IAA9BpC,KAAKa,MAAMf,SAASrB,OAAwBuB,KAAKa,MAAMf,SAASrB,MAAMqC,OAKvE,gCACE,cAAC,EAAD,IACA,sBAAKC,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,4BACA,qBAAKA,UAAU,2BAAf,SACE,uBAAM6E,SAAU5F,KAAKmG,YAArB,UACE,sBAAKpF,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,OAAf,oBACA,uBACE7D,KAAK,OACLjB,UAAU,eACVK,KAAK,OACL0E,IAAK9F,KAAKgE,QACV+B,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMyC,MAAME,OAEzBpB,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMyC,MAAME,KACjB,+BAGJ,sBAAKL,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,QAAf,yBACA,uBACE7D,KAAK,MACLjB,UAAU,eACVK,KAAK,QACL0E,IAAK9F,KAAKmE,SACV4B,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMyC,MAAM0D,QAEzB5E,KAAKkF,UAAUe,QACd,cACAjG,KAAKvB,MAAMyC,MAAM0D,MACjB,wBAIN,sBAAK7D,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,QAAf,mBACA,uBACE7D,KAAK,QACLjB,UAAU,eACVK,KAAK,QACL0E,IAAK9F,KAAKoE,SACV2B,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMyC,MAAMgC,QAEzBlD,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMyC,MAAMgC,MACjB,qBAGJ,sBAAKnC,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,UAAf,0BACA,uBACE7D,KAAK,OACLjB,UAAU,eACVK,KAAK,UACL0E,IAAK9F,KAAKsE,WACVyB,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMyC,MAAMG,UAEzBrB,KAAKkF,UAAUe,QACd,eACAjG,KAAKvB,MAAMyC,MAAMG,QACjB,kBAIN,sBAAKN,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,OAAf,oBACA,uBACE7D,KAAK,OACLjB,UAAU,eACV+E,IAAK9F,KAAKqE,QACV0B,SAAU/F,KAAKyE,YACfrD,KAAK,OACLuD,MAAO3E,KAAKvB,MAAMyC,MAAMI,OAEzBtB,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMyC,MAAMI,KACjB,eAGJ,sBAAKP,UAAU,sBAAf,UACE,uBAAO8E,QAAQ,UAAf,2BACA,uBACE7D,KAAK,OACLjB,UAAU,eACVK,KAAK,UACL0E,IAAK9F,KAAKuE,WACVwB,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMyC,MAAM2D,UAEzB7E,KAAKkF,UAAUe,QACd,gBACAjG,KAAKvB,MAAMyC,MAAM2D,QACjB,0BAIN,qBAAK9D,UAAU,aAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACEA,UAAU,mBACVK,KAAK,SACL0E,IAAK9F,KAAKwE,UACVuB,SAAU/F,KAAKyE,YACfzC,KAAK,aAEP,uBAAOjB,UAAU,mBAAmB8E,QAAQ,SAA5C,yBAKJ,wBAAQ7D,KAAK,SAASjB,UAAU,kBAAhC,kCA7HD,cAAC,IAAD,CAAUQ,GAAG,e,GArEAI,aC+JX4E,E,4MA9Jb9H,MAAQ,CACNyC,MAAO,GACPvC,GAAIZ,EAAKa,YACT4H,MAAO,KACPC,MAAO,GACPC,cAAe,I,EAGjBC,YAAc,SAAC3B,GACbA,EAAEC,iBACF,EAAKzE,SAAS,CACZkG,cAAe,EAAKjI,MAAM+H,MAAMI,QAAO,SAACC,GAAD,OACrCA,EAAKzF,KAAK0F,SAAS,EAAKrI,MAAMgI,a,uDAKpC,WAAqB,IAAD,OACd1H,EAAUiB,KAAKa,MAAMuF,MAAMC,OAAOhG,GACtCL,KAAKvB,MAAME,GACRgB,WAAW,UACXC,IAAIb,GACJkB,MACAT,MAAK,SAACI,GACL,GAAIA,EAAI0G,OAAQ,CACd,IAAIpF,EACJA,EAAQtB,EAAIQ,OACZ,EAAKI,SAAS,CAAEU,MAAOA,SAEvBP,QAAQC,IAAI,wBAGlBZ,KAAKvB,MAAME,GACRgB,WAAW,SACXoH,MAAM,UAAW,KAAMhI,GACvBkB,MACAT,MAAK,SAACU,GACL,IAAMsG,EAAQ,GACdtG,EAASC,SAAQ,SAACP,GAChB,IAAMQ,EAAOR,EAAIQ,OACjBoG,EAAMlG,KAAKF,MAEb,EAAKI,SAAS,CAAEgG,MAAOA,IACvB,EAAKhG,SAAS,CACZkG,cAAe,EAAKjI,MAAM+H,MAAMI,QAAO,SAACC,GAAD,OACrCA,EAAKzF,KAAK0F,SAAS,EAAKrI,MAAMgI,eAInChG,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,oBAGlC,WAAU,IAAD,OACP,YAAiC0B,IAA9BpC,KAAKa,MAAMf,SAASrB,OAAwBuB,KAAKa,MAAMf,SAASrB,MAAMqC,OAKvE,gCACE,cAAC,EAAD,IACA,qBAAKC,UAAU,6BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,oBAAd,SACE,iCAASf,KAAKvB,MAAMyC,MAAME,SAE5B,sBAAKL,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,oBAAIA,UAAU,SAAd,SAAwBf,KAAKvB,MAAMyC,MAAMI,UAE3C,sBAAKP,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,0BACA,oBAAIA,UAAU,SAAd,SAAwBf,KAAKvB,MAAMyC,MAAMG,aAE3C,sBAAKN,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,mBACA,oBAAIA,UAAU,SAAd,SAAwBf,KAAKvB,MAAMyC,MAAMgC,WAE3C,sBAAKnC,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,yBACA,oBAAIA,UAAU,SAAd,SAAwBf,KAAKvB,MAAMyC,MAAM0D,WAE3C,sBAAK7D,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,2BACA,oBAAIA,UAAU,SAAd,SAAwBf,KAAKvB,MAAMyC,MAAM2D,aAEd,OAA5B7E,KAAKvB,MAAMyC,MAAM4D,OAChB,sBAAK/D,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,oBAAIA,UAAU,sBAAd,uBAGF,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,oBAAIA,UAAU,wBAAd,iCAKR,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,OAAd,SACE,0DAEF,uBAAMA,UAAU,mBAAmB6E,SAAU5F,KAAK2G,YAAlD,UACE,uBACE5F,UAAU,uBACViB,KAAK,SACLgE,YAAY,oBACZgB,aAAW,SACXjB,SAAU,SAACkB,GAAD,OAAW,EAAKzG,SAAS,CAAEiG,MAAOQ,EAAMC,OAAOvC,WAE3D,uBACE5D,UAAU,uCACViB,KAAK,SACL2C,MAAM,cAGV,wBAAO5D,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCACGhB,KAAKvB,MAAMiI,cAAczF,KAAI,SAAC4F,GAC7B,OACE,+BACE,6BAAKA,EAAKzF,OACV,6BAAKyF,EAAKM,WACV,6BAAKN,EAAK3D,QACV,+BACG,IACD,cAAC,IAAD,CACEnC,UAAU,uBACVQ,GAAI,CAACC,SAAS,eAAD,OAAgBqF,EAAKxG,IAAM5B,MAAM,CAACqC,OAAQ,EAAKD,MAAMC,SAFpE,SAIE,mBAAGC,UAAU,kBAEf,wBACEA,UAAU,iBACVW,QAAS,kBAAM,EAAK5C,SAAS+H,EAAKxG,KAFpC,SAIE,mBAAGU,UAAU,wBAhBV8F,EAAKxG,YAwBQ,OAA7BL,KAAKvB,MAAMiI,cAAyB,2DAAqC,SAjGvE,cAAC,IAAD,CAAUnF,GAAG,e,GAzDAI,aCIXyF,EARF,WACT,OACI,0BAASrG,UAAU,YAAnB,UACI,kEACA,mF,iBCoEGsG,E,4MAlEXjD,SAAWH,IAAMC,Y,EACjBoD,YAAcrD,IAAMC,Y,EAEpBzF,MAAQ,CACJoI,KAAM,GACNlI,GAAIZ,EAAKa,YACTkC,QAAQ,G,EAGZ2D,YAAc,WACV,EAAKjE,SAAS,CACVqG,KAAM,CACF3D,MAAO,EAAKkB,SAASM,QAAQC,MAC7B4C,SAAU,EAAKD,YAAY5C,QAAQC,U,EAK/C6C,UAAY,SAACxC,GACTA,EAAEC,iBACF,EAAKR,cAEL1G,EACK+D,OACA2F,2BAA2B,EAAKrD,SAASM,QAAQC,MAAO+C,IAAO,EAAKJ,YAAY5C,QAAQC,OAAOgD,YAC/FnI,MAAK,SAAAoI,GACF,EAAKpH,SAAS,CAACM,QAAO,OAEzBL,OAAM,SAAAoH,GACH,EAAKrH,SAAS,CAACM,QAAO,IACtBH,QAAQC,IAAIiH,O,4CAMxB,WACI,OAAI7H,KAAKvB,MAAMqC,OACJ,cAAC,IAAD,CAAUS,GAAI,CAACC,SAAS,QAAS/C,MAAM,CAACqC,OAAQd,KAAKvB,MAAMqC,WAGlE,cAAC,IAAMuB,SAAP,UACI,qBAAKtB,UAAU,YAAf,SACI,yBAASA,UAAU,8BAAnB,SACI,uBAAMA,UAAU,+DAA+D6E,SAAU5F,KAAKwH,UAA9F,UACI,oBAAIzG,UAAU,OAAd,+BAEA,sBAAKA,UAAU,oEAAf,UACI,uBAAO8E,QAAQ,QAAQ9E,UAAU,mBAAjC,mBACA,uBAAOA,UAAU,eAAeiB,KAAK,OAAOZ,KAAK,QAAQ0E,IAAK9F,KAAKoE,SAAU2B,SAAU/F,KAAKyE,YAAad,UAAQ,OAGrH,sBAAK5C,UAAU,oEAAf,UACI,uBAAO8E,QAAQ,WAAW9E,UAAU,mBAApC,2BACA,uBAAOA,UAAU,eAAeiB,KAAK,WAAWZ,KAAK,WAAW0E,IAAK9F,KAAKsH,YAAavB,SAAU/F,KAAKyE,YAAad,UAAQ,OAE/H,cAAC,IAAD,CAAS5C,UAAU,OAAOQ,GAAG,UAA7B,yBACA,uBAAOS,KAAK,SAAS2C,MAAM,QAAQ5D,UAAU,iC,GA3DrDY,aC0PLmG,G,yDA/Ob,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IATRmD,QAAUC,IAAMC,YAQG,EAPnB6D,YAAc9D,IAAMC,YAOD,EANnBE,SAAWH,IAAMC,YAME,EALnBoD,YAAcrD,IAAMC,YAKD,EAJnB8D,qBAAuB/D,IAAMC,YAIV,EAHnB+D,cAAgBhE,IAAMC,YAGH,EAFnBgE,UAAYjE,IAAMC,YAEC,EAOnBzF,MAAQ,CACNoI,KAAM,GACNnI,OAAQ,KACRC,GAAIZ,EAAKa,YACTuJ,UAAU,EACVC,SAAU,MAZO,EA+BnB3D,YAAc,WACZ,EAAKjE,SAAS,CACZqG,KAAM,CACJzF,KAAM,EAAK4C,QAAQU,QAAQC,MAC3BwC,SAAU,EAAKY,YAAYrD,QAAQC,MACnCzB,MAAO,EAAKkB,SAASM,QAAQC,MAC7B4C,SAAUG,IAAO,EAAKJ,YAAY5C,QAAQC,OAAOgD,WACjDU,kBAAmBX,IAAO,EAAKM,qBAAqBtD,QAAQC,OAAOgD,WACnEW,WAAY,EAAKL,cAAcvD,QAAQC,MACvC5F,QAAS,EAAKmJ,UAAUxD,QAAQC,OAElCyD,SAAU,EAAKF,UAAUxD,QAAQC,SA1ClB,EA8CnB4D,SAAW,SAACvD,GACVA,EAAEC,iBACF,EAAKR,cACL9D,QAAQC,IAAI,EAAKnC,MAAMoI,MACnB,EAAK3B,UAAUC,WACb,EAAK1G,MAAMoI,KAAKU,WAAa,EAAK9I,MAAMoI,KAAKwB,oBAC/CtK,EACG+D,OACA0G,+BACC,EAAK/J,MAAMoI,KAAK3D,MAChB,EAAKzE,MAAMoI,KAAKU,UAEjB/H,MAAK,SAACoI,GACL,EAAKnJ,MAAME,GACRgB,WAAW,SACXC,IAAIgI,EAAIf,KAAK4B,KACbrD,IAHH,2BAGW,EAAK3G,MAAMoI,MAHtB,IAG4BxG,GAAGuH,EAAIf,KAAK4B,UAQzChI,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGd,EAAKF,SAAS,CAAC2H,UAAU,MAG7B,EAAKjD,UAAUK,eACf,EAAKC,gBA5EPC,IAAqBC,UAAU,KAAMpD,GACrC,EAAK4C,UAAY,IAAIO,IAAqB,CAAEE,OAAQ,OAHnC,E,qDAenB,WAAqB,IAAD,OAClB3F,KAAKvB,MAAME,GACRgB,WAAW,UACXM,MACAT,MAAK,SAACU,GACL,IAAMxB,EAAS,GACfwB,EAASC,SAAQ,SAACP,GAChB,EAAKY,SAAS,CAAE4H,SAAUxI,EAAIS,KAC9B,IAAMD,EAAOR,EAAIQ,OACjB1B,EAAO4B,KAAKF,MAEd,EAAKI,SAAS,CAAE9B,OAAQA,OAEzB+B,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,oBAuDlC,WACE,OAAIV,KAAKvB,MAAM0J,UACbnI,KAAKQ,SAAS,CAAC2H,UAAU,IAClB,cAAC,IAAD,CAAU5G,GAAG,YAGpB,cAAC,IAAMc,SAAP,UACE,qBAAKtB,UAAU,YAAf,SACE,yBAASA,UAAU,8BAAnB,SACE,uBACEA,UAAU,+DACV6E,SAAU5F,KAAKuI,SAFjB,UAIE,oBAAIxH,UAAU,OAAd,4BACA,sBAAKA,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,OAAO9E,UAAU,mBAAhC,oBAGA,uBACEA,UAAU,eACViB,KAAK,OACLZ,KAAK,OACL0E,IAAK9F,KAAKgE,QACV+B,SAAU/F,KAAKyE,cAEhBzE,KAAKkF,UAAUe,QACd,SACAjG,KAAKvB,MAAMoI,KAAKzF,KAChB,2BAIJ,sBAAKL,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,WAAW9E,UAAU,mBAApC,sBAGA,uBACEA,UAAU,eACViB,KAAK,OACLZ,KAAK,WACL0E,IAAK9F,KAAK+H,YACVhC,SAAU/F,KAAKyE,cAEhBzE,KAAKkF,UAAUe,QACd,WACAjG,KAAKvB,MAAMoI,KAAKM,SAChB,2BAIJ,sBAAKpG,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,QAAQ9E,UAAU,mBAAjC,mBAGA,uBACEA,UAAU,eACViB,KAAK,OACLZ,KAAK,QACL0E,IAAK9F,KAAKoE,SACV2B,SAAU/F,KAAKyE,cAEhBzE,KAAKkF,UAAUe,QACd,QACAjG,KAAKvB,MAAMoI,KAAK3D,MAChB,qBAIJ,sBAAKnC,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,WAAW9E,UAAU,mBAApC,2BAGA,uBACEA,UAAU,eACViB,KAAK,WACLZ,KAAK,WACL0E,IAAK9F,KAAKsH,YACVvB,SAAU/F,KAAKyE,cAEhBzE,KAAKkF,UAAUe,QACd,gBACAjG,KAAKvB,MAAMoI,KAAKU,SAChB,qBAIJ,sBAAKxG,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,oBAAoB9E,UAAU,mBAA7C,mCAGA,uBACEA,UAAU,eACViB,KAAK,WACLZ,KAAK,oBACL0E,IAAK9F,KAAKgI,qBACVjC,SAAU/F,KAAKyE,cAEhBzE,KAAKkF,UAAUe,QACd,wBACAjG,KAAKvB,MAAMoI,KAAKwB,kBAChB,qBAIJ,sBAAKtH,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,aAAa9E,UAAU,mBAAtC,0BAGA,uBACEA,UAAU,eACViB,KAAK,OACLZ,KAAK,aACL0E,IAAK9F,KAAKiI,cACVlC,SAAU/F,KAAKyE,cAEhBzE,KAAKkF,UAAUe,QACd,eACAjG,KAAKvB,MAAMoI,KAAKyB,WAChB,eAIJ,sBAAKvH,UAAU,oEAAf,UACE,uBAAO8E,QAAQ,SAAS9E,UAAU,mBAAlC,+BAIA,wBACEA,UAAU,eACVK,KAAK,SACL0E,IAAK9F,KAAKkI,UACVnC,SAAU/F,KAAKyE,YAJjB,SAMGzE,KAAKvB,MAAMC,QACVsB,KAAKvB,MAAMC,OAAOuC,KAAI,SAACC,GACrB,OACE,wBAA4ByD,MAAOzD,EAAMnC,QAAzC,SACGmC,EAAME,MADIF,EAAMnC,iBAQ7B,uBACEiD,KAAK,SACL2C,MAAM,WACN5D,UAAU,iC,GA/OLY,cCoJN+G,EApJf,kDAMI,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IALVmD,QAAUC,IAAMC,YAIG,EAHnB6D,YAAc9D,IAAMC,YAGD,EAFnB+D,cAAgBhE,IAAMC,YAEH,EAMnBzF,MAAQ,CACJoI,KAAM,GACNlI,GAAIZ,EAAKa,aARM,EAWnB6F,YAAc,WACV,EAAKjE,SAAS,CACVqG,KAAM,CACFzF,KAAM,EAAK4C,QAAQU,QAAQC,MAC3BwC,SAAU,EAAKY,YAAYrD,QAAQC,MACnC2D,WAAY,EAAKL,cAAcvD,QAAQC,UAhBhC,EAyCnBgE,WAAa,SAAC3D,GACVA,EAAEC,iBACF,EAAKR,cAEL,IAAImE,EAAS,EAAK/H,MAAMuF,MAAMC,OAAOwC,OAEjC,EAAK3D,UAAUC,YACf,EAAK1G,MAAME,GAAGgB,WAAW,SAASC,IAAIgJ,GAAQrI,OAAO,CAAEa,KAAM,EAAK3C,MAAMoI,KAAKzF,KAAM+F,SAAU,EAAK1I,MAAMoI,KAAKM,SAAUmB,WAAY,EAAK7J,MAAMoI,KAAKyB,aACnJjD,YAAW,WACPxF,OAAOC,SAASwF,KAAO,UACxB,OAEH,EAAKJ,UAAUK,eACf,EAAKC,gBApDTC,IAAqBC,UAAU,KAAMpD,GACrC,EAAK4C,UAAY,IAAIO,IAAqB,CAAEE,OAAQ,OAHrC,EANvB,qDA2BI,WAAoB,IAAD,OACXiD,EAAS5I,KAAKa,MAAMuF,MAAMC,OAAOwC,OAErC7I,KAAKvB,MAAME,GACZgB,WAAW,SACXC,IAAIgJ,GACJ3I,MACAT,MAAK,SAACI,GACL,GAAIA,EAAI0G,OAAQ,CACd,IAAIO,EACJA,EAAOjH,EAAIQ,OACX,EAAKI,SAAS,CAAEqG,KAAMA,SAEtBlG,QAAQC,IAAI,wBAEbH,OAAM,SAAAoH,GACPlH,QAAQC,IAAIiH,QA3CpB,oBAiEI,WACI,YAAiCzF,IAA9BpC,KAAKa,MAAMf,SAASrB,OAAwBuB,KAAKa,MAAMf,SAASrB,MAAMqC,OAKrE,gCACI,cAAC,EAAD,IACA,sBAAKC,UAAU,wBAAf,UACI,oBAAIA,UAAU,OAAd,+BACA,uBACIA,UAAU,+DACV6E,SAAU5F,KAAK2I,WAFnB,UAII,sBAAK5H,UAAU,oEAAf,UACI,uBAAO8E,QAAQ,OAAO9E,UAAU,mBAAhC,oBAGA,uBACIA,UAAU,eACViB,KAAK,OACLZ,KAAK,OACL0E,IAAK9F,KAAKgE,QACV+B,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMoI,KAAKzF,OAE1BpB,KAAKkF,UAAUe,QACZ,SACAjG,KAAKvB,MAAMoI,KAAKzF,KAChB,2BAIR,sBAAKL,UAAU,oEAAf,UACI,uBAAO8E,QAAQ,WAAW9E,UAAU,mBAApC,sBAGA,uBACIA,UAAU,eACViB,KAAK,OACLZ,KAAK,WACL0E,IAAK9F,KAAK+H,YACVhC,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMoI,KAAKM,WAE1BnH,KAAKkF,UAAUe,QACZ,WACAjG,KAAKvB,MAAMoI,KAAKM,SAChB,2BAIR,sBAAKpG,UAAU,oEAAf,UACI,uBAAO8E,QAAQ,aAAa9E,UAAU,mBAAtC,0BAGA,uBACIA,UAAU,eACViB,KAAK,OACLZ,KAAK,aACL0E,IAAK9F,KAAKiI,cACVlC,SAAU/F,KAAKyE,YACfE,MAAO3E,KAAKvB,MAAMoI,KAAKyB,aAE1BtI,KAAKkF,UAAUe,QACZ,eACAjG,KAAKvB,MAAMoI,KAAKyB,WAChB,eAIR,uBACItG,KAAK,SACL2C,MAAM,WACN5D,UAAU,6BAvEnB,cAAC,IAAD,CAAUQ,GAAG,eApEhC,GAAgCI,aCwBjBmH,E,4JApBb,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,cAAC,IAAD,CAAO2B,KAAK,QAAQC,UAAW9G,IAC/B,cAAC,IAAD,CAAO6G,KAAK,eAAeC,UAAWlF,IACtC,cAAC,IAAD,CAAOiF,KAAK,yBAAyBC,UAAW/C,IAChD,cAAC,IAAD,CAAO8C,KAAK,sBAAsBC,UAAWP,IAC7C,cAAC,IAAD,CAAOM,KAAK,aAAaC,UAAW1C,IACpC,cAAC,IAAD,CAAOyC,KAAK,SAASC,UAAW5B,IAChC,cAAC,IAAD,CAAO2B,KAAK,UAAUC,UAAWnB,IAEjC,cAAC,IAAD,CAAOmB,UAAW7B,a,GAfPzF,aCANuH,MARf,WACE,OACE,qBAAKnI,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ccd3873.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBmRAHgir6S7esdp5ACr4OFYk7h5lcRKQY\",\n  authDomain: \"usersandcampusmanager.firebaseapp.com\",\n  projectId: \"usersandcampusmanager\",\n  storageBucket: \"usersandcampusmanager.appspot.com\",\n  messagingSenderId: \"1016626475792\",\n  appId: \"1:1016626475792:web:b73cd58a990611ac446b95\",\n};\n\n// Initialize Firebase\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default fire;\n","import React, { Component } from \"react\";\nimport fire from \"../../config/firebase\";\nimport Swal from \"sweetalert2\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nclass ListVenues extends Component {\n  state = {\n    venues: null,\n    db: fire.firestore(),\n    delete: false,\n  };\n\n  componentDidMount() {\n    this.state.db\n      .collection(\"venues\")\n      .get()\n      .then((snapshot) => {\n        const venues = [];\n        snapshot.forEach((doc) => {\n          const data = { ...doc.data(), id: doc.id };\n          venues.push(data);\n          this.state.db.collection(\"venues\").doc(doc.id).update({\n            venueId: doc.id,\n          });\n        });\n        this.setState({ venues: venues });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  onDelete = (venueId) => {\n    Swal.fire({\n      title: \"Estás seguro de eliminar la sede?\",\n      text: \"Serán cambios irreversibles!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Si, eliminar!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.state.db.collection(\"venues\").doc(venueId).delete();\n        window.location.reload(false);\n      }\n    });\n  };\n\n  render() { \n    if(!this.props.logged){\n      return <Redirect to='/login'/>\n    }\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Dirección</th>\n            <th scope=\"col\">Ciudad</th>\n            <th scope=\"col\">Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.venues &&\n            this.state.venues.map((venue) => {\n              const id = \"venue/\" + venue.id;\n              const idUpdate = \"updateVenue/\" + venue.id;\n              return (\n                <tr key={venue.id}>\n                  <td className=\"align-middle\">{venue.name}</td>\n                  <td className=\"align-middle\">{venue.address}</td>\n                  <td className=\"align-middle\">{venue.city}</td>\n                  <td>\n                    <NavLink\n                      className=\"btn btn-primary mr-2\"\n                      to={{pathname:id, state:{logged: this.props.logged}}}\n                      activeClassName=\"active\"\n                    >\n                      {\" \"}\n                      <i className=\"fas fa-eye\"></i>\n                    </NavLink>\n                    <NavLink className=\"btn btn-warning mr-2\" to={{pathname:idUpdate, state:{logged: this.props.logged}}}>\n                      <i className=\"fas fa-edit\"></i>\n                    </NavLink>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => this.onDelete(venue.id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    );\n  }\n}\nexport default ListVenues;\n","import ListVenues from \"./ListVenues\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nconst Venues = (props) => {\n\n  if(props.logged){\n    return ( \n      <div>\n        <div className=\"d-flex py-5\">\n          <h1 className=\"\">Sedes</h1>\n          <NavLink\n            className=\"nav-link ml-auto p-2\"\n            to={{pathname:\"/createVenue\", state:{logged: props.logged}}}\n            activeClassName=\"active\"\n          >\n            Crear Sede\n          </NavLink>\n        </div>\n        <ListVenues logged={props.logged} />\n      </div>\n    );\n  }else{\n    return <Redirect to=\"/login\" />;\n  }\n\n  \n};\nexport default Venues;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport fire from \"../config/firebase\";\n\nclass Navbar extends Component {\n  logout() {\n    fire.auth().signOut();\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark container-fluid\">\n        <div className=\"container\">\n          <NavLink className=\"navbar-brand\" to=\"/\" activeClassName=\"active\">\n            User's & Campus Manager\n          </NavLink>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  to=\"/home\"\n                  activeClassName=\"active\"\n                >\n                  Inicio\n                </NavLink>\n              </li>\n            </ul>\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  to=\"/\"\n                  activeClassName=\"active\"\n                  onClick={this.logout}\n                >\n                  Cerrar sesión\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Venues from \"./Venues/Venues\";\nimport Navbar from \"./Navbar\";\n\nimport { Redirect } from \"react-router\";\n\nclass Home extends Component {\n  \n  state={\n    logged:true\n  }\n \n  render() {\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \n      this.setState({logged:false});\n      return <Redirect to='/login'/>\n    } \n    return (\n      <React.Fragment>\n        <Navbar />\n\n        <div className=\"container\">\n          <section>\n            <Venues logged={this.state.logged} />\n          </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default Home;\n","  const es ={\n    accepted             : ':attribute debe ser aceptado.',\n    after                : ':attribute debe ser una fecha posterior a :date.',\n    after_or_equal       : ':attribute debe ser una fecha posterior o igual a :date.',\n    alpha                : ':attribute sólo debe contener letras.',\n    // alpha_space          : 'The :attribute may only contain letters and spaces.',\n    // alpha_num            : 'The :attribute may only contain letters and numbers.',\n    // alpha_num_space      : 'The :attribute may only contain letters, numbers, and spaces.',\n    // alpha_num_dash       : 'The :attribute may only contain letters, numbers, and dashes.',\n    // alpha_num_dash_space : 'The :attribute may only contain letters, numbers, dashes, and spaces.',\n    array                : ':attribute debe ser un conjunto.',\n    before               : ':attribute debe ser una fecha anterior a :date.',\n    before_or_equal      : ':attribute debe ser una fecha anterior o igual a :date.',\n    between              : ':attribute tiene que estar entre :min - :max:type.',\n    boolean              : 'El campo :attribute debe tener un valor verdadero o falso.',\n    // card_exp             : 'The :attribute must be a valid expiration date.',\n    // card_num             : 'The :attribute must be a valid credit card number.',\n    // currency             : 'The :attribute must be a valid currency.',\n    date                 : ':attribute no es una fecha válida.',\n    date_equals          : ':attribute debe ser una fecha igual a :date.',\n    email                : ':attribute no es un correo válido',\n    in                   : ':attribute es inválido :values.',\n    integer              : ':attribute debe ser un número entero.',\n    max                  : ':attribute no debe ser mayor a :max:type.',\n    min                  : 'El tamaño de :attribute debe ser de al menos :min:type.',\n    not_in               : ':attribute es inválido :values.',\n    not_regex            : 'El formato del campo :attribute no es válido.',\n    numeric              : ':attribute debe ser numérico.',\n    // phone                : 'The :attribute must be a valid phone number.',\n    regex                : 'El formato de :attribute es inválido.',\n    required             : 'El campo :attribute es obligatorio.',\n    size                 : 'El tamaño de :attribute debe ser :size:type.',\n    string               : 'El campo :attribute debe ser una cadena de caracteres.',\n    // typeof               : 'The :attribute is not the correct type of :type.',\n    url                  : 'El formato :attribute es inválido.',\n  }\n  export default es;","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport fire from \"../../config/firebase\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport es from \"../../config/es\";\nimport { Redirect } from \"react-router\";\n\nclass CreateVenue extends Component {\n  constructor() {\n    super();\n    SimpleReactValidator.addLocale(\"es\", es);\n    this.validator = new SimpleReactValidator({ locale: \"es\" });\n  }\n\n  nameRef = React.createRef();\n  phoneRef = React.createRef();\n  emailRef = React.createRef();\n  cityRef = React.createRef();\n  addressRef = React.createRef();\n  zipCodeRef = React.createRef();\n  activeRef = React.createRef();\n\n  state = {\n    venue: {},\n    db: fire.firestore(),\n  };\n\n  changeState = () => {\n    this.setState({\n      venue: {\n        name: this.nameRef.current.value,\n        phone: this.phoneRef.current.value,\n        email: this.emailRef.current.value,\n        city: this.cityRef.current.value,\n        address: this.addressRef.current.value,\n        zipCode: this.zipCodeRef.current.value,\n        active: this.activeRef.current.value,\n      },\n    });\n  };\n\n  saveVenue = (e) => {\n    e.preventDefault();\n    this.changeState();\n    if (this.validator.allValid()) {\n      this.state.db.collection(\"venues\").doc().set(this.state.venue);\n      setTimeout(function () {\n        window.location.href = \"/home\";\n      }, 1000);\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \n \n      return <Redirect to='/login'/>\n    }  \n    return (\n      <div>\n        <Navbar />\n        <div className=\"container text-center\">\n          <h1 className=\"my-5\">Crear sede</h1>\n          <div className=\"card col-md-12 py-5 my-5\">\n            <form onSubmit={this.saveVenue}>\n              <div className=\"form-row col-md-12\">\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"name\">Nombre</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    ref={this.nameRef}\n                    onChange={this.changeState}\n                    placeholder=\"Sede Manglares\"\n                  />\n                  {this.validator.message(\n                    \"nombre\",\n                    this.state.venue.name,\n                    \"required|alpha_num_space\"\n                  )}\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"phone\">Teléfono</label>\n                  <input\n                    type=\"tel\"\n                    className=\"form-control\"\n                    name=\"phone\"\n                    ref={this.phoneRef}\n                    onChange={this.changeState}\n                    placeholder=\"(+57) 555 555 55 55\"\n                  />\n                  {this.validator.message(\n                    \"teléfono\",\n                    this.state.venue.phone,\n                    \"required|phone\"\n                  )}\n                </div>\n              </div>\n              <div className=\"form-row col-md-12\">\n                <div className=\"form-group col-md-4\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    ref={this.emailRef}\n                    onChange={this.changeState}\n                    placeholder=\"Email\"\n                  />\n                  {this.validator.message(\n                    \"correo\",\n                    this.state.venue.email,\n                    \"required|email\"\n                  )}\n                </div>\n                <div className=\"form-group col-md-8\">\n                  <label htmlFor=\"address\">Dirección</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"address\"\n                    ref={this.addressRef}\n                    onChange={this.changeState}\n                    placeholder=\"Avenida 555 calle 55\"\n                  />\n                  {this.validator.message(\n                    \"dirección\",\n                    this.state.venue.address,\n                    \"required\"\n                  )}\n                </div>\n              </div>\n              <div className=\"form-row col-md-12\">\n                <div className=\"form-group col-md-8\">\n                  <label htmlFor=\"city\">Ciudad</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={this.cityRef}\n                    onChange={this.changeState}\n                    name=\"city\"\n                    placeholder=\"Cali\"\n                  />\n                  {this.validator.message(\n                    \"ciudad\",\n                    this.state.venue.city,\n                    \"required\"\n                  )}\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label htmlFor=\"zipCode\">Código Zip</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"zipCode\"\n                    ref={this.zipCodeRef}\n                    onChange={this.changeState}\n                    placeholder=\"760026\"\n                  />\n                  {this.validator.message(\n                    \"código zip\",\n                    this.state.venue.zipCode,\n                    \"required|numeric\"\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    name=\"active\"\n                    ref={this.activeRef}\n                    onChange={this.changeState}\n                    type=\"checkbox\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"active\">\n                    Activa\n                  </label>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Crear sede\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateVenue;\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport es from \"../../config/es\";\nimport fire from \"../../config/firebase\";\nimport { Redirect } from \"react-router\";\n\nclass UpdateVenue extends Component {\n  constructor(props) {\n    super(props);\n    SimpleReactValidator.addLocale(\"es\", es);\n    this.validator = new SimpleReactValidator({ locale: \"es\" });\n  }\n\n  nameRef = React.createRef();\n  phoneRef = React.createRef();\n  emailRef = React.createRef();\n  cityRef = React.createRef();\n  addressRef = React.createRef();\n  zipCodeRef = React.createRef();\n  activeRef = React.createRef();\n\n  state = {\n    venue: {},\n    db: fire.firestore(),\n  };\n\n  changeState = () => {\n    this.setState({\n      venue: {\n        name: this.nameRef.current.value,\n        phone: this.phoneRef.current.value,\n        email: this.emailRef.current.value,\n        city: this.cityRef.current.value,\n        address: this.addressRef.current.value,\n        zipCode: this.zipCodeRef.current.value,\n        active: this.activeRef.current.value,\n      },\n    });\n  };\n\n  componentDidMount() {\n    let venueId = this.props.match.params.idUpdate\n    this.state.db\n      .collection(\"venues\")\n      .doc(venueId)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          let venue = {};\n          venue = doc.data();\n          this.setState({ venue: venue });\n        } else {\n          console.log(\"No such document!\");\n        }\n      });\n  }\n\n  updateVenue = (e) => {\n    e.preventDefault();\n    this.changeState();\n    let id = this.props.match.params.idUpdate\n    if (this.validator.allValid()) {\n      this.state.db.collection(\"venues\").doc(id).set({...this.state.venue, venueId: id});\n      setTimeout(function () {\n        window.location.href = \"/home\";\n      }, 1000);\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \n \n      return <Redirect to='/login'/>\n    }\n    return (\n      <div>\n        <Navbar />\n        <div className=\"container text-center\">\n          <h1 className=\"my-5\">Modificar sede</h1>\n          <div className=\"card col-md-12 py-5 my-5\">\n            <form onSubmit={this.updateVenue}>\n              <div className=\"form-row col-md-12\">\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"name\">Nombre</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    ref={this.nameRef}\n                    onChange={this.changeState}\n                    value={this.state.venue.name}\n                  />\n                  {this.validator.message(\n                    \"nombre\",\n                    this.state.venue.name,\n                    \"required|alpha_num_space\"\n                  )}\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"phone\">Teléfono</label>\n                  <input\n                    type=\"tel\"\n                    className=\"form-control\"\n                    name=\"phone\"\n                    ref={this.phoneRef}\n                    onChange={this.changeState}\n                    value={this.state.venue.phone}\n                  />\n                  {this.validator.message(\n                    \"teléfono\",\n                    this.state.venue.phone,\n                    \"required|phone\"\n                  )}\n                </div>\n              </div>\n              <div className=\"form-row col-md-12\">\n                <div className=\"form-group col-md-4\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    ref={this.emailRef}\n                    onChange={this.changeState}\n                    value={this.state.venue.email}\n                  />\n                  {this.validator.message(\n                    \"correo\",\n                    this.state.venue.email,\n                    \"required|email\"\n                  )}\n                </div>\n                <div className=\"form-group col-md-8\">\n                  <label htmlFor=\"address\">Dirección</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"address\"\n                    ref={this.addressRef}\n                    onChange={this.changeState}\n                    value={this.state.venue.address}\n                  />\n                  {this.validator.message(\n                    \"dirección\",\n                    this.state.venue.address,\n                    \"required\"\n                  )}\n                </div>\n              </div>\n              <div className=\"form-row col-md-12\">\n                <div className=\"form-group col-md-8\">\n                  <label htmlFor=\"city\">Ciudad</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={this.cityRef}\n                    onChange={this.changeState}\n                    name=\"city\"\n                    value={this.state.venue.city}\n                  />\n                  {this.validator.message(\n                    \"ciudad\",\n                    this.state.venue.city,\n                    \"required\"\n                  )}\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label htmlFor=\"zipCode\">Código Zip</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"zipCode\"\n                    ref={this.zipCodeRef}\n                    onChange={this.changeState}\n                    value={this.state.venue.zipCode}\n                  />\n                  {this.validator.message(\n                    \"código zip\",\n                    this.state.venue.zipCode,\n                    \"required|numeric\"\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    name=\"active\"\n                    ref={this.activeRef}\n                    onChange={this.changeState}\n                    type=\"checkbox\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"active\">\n                    Activa\n                  </label>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Modificar\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UpdateVenue;\n","import React, { Component } from \"react\";\nimport fire from \"../../config/firebase\";\nimport Navbar from \"../Navbar\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nclass MasterVenue extends Component {\n \n  state = {\n    venue: {},\n    db: fire.firestore(),\n    users: null,\n    query: \"\",\n    filteredQuery: [],\n  };\n\n  filterNames = (e) => {\n    e.preventDefault();\n    this.setState({\n      filteredQuery: this.state.users.filter((user) =>\n        user.name.includes(this.state.query)\n      ),\n    });\n  };\n\n  componentDidMount() {\n    let venueId = this.props.match.params.id;\n    this.state.db\n      .collection(\"venues\")\n      .doc(venueId)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          let venue = {};\n          venue = doc.data();\n          this.setState({ venue: venue });\n        } else {\n          console.log(\"No such document!\");\n        }\n      });\n    this.state.db\n      .collection(\"users\")\n      .where(\"venueId\", \"==\", venueId)\n      .get()\n      .then((snapshot) => {\n        const users = [];\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          users.push(data);\n        });\n        this.setState({ users: users });\n        this.setState({\n          filteredQuery: this.state.users.filter((user) =>\n            user.name.includes(this.state.query)\n          ),\n        });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  render() {\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \n \n      return <Redirect to='/login'/>\n    }\n    return (\n      <div>\n        <Navbar />\n        <div className=\"container text-center py-5\">\n          <div className=\"card\">\n            <h1 className=\"py-3 text-primary\">\n              <strong>{this.state.venue.name}</strong>\n            </h1>\n            <div className=\"row py-2\">\n              <h3 className=\"col-sm text-secondary\">Ciudad</h3>\n              <h2 className=\"col-sm\">{this.state.venue.city}</h2>\n            </div>\n            <div className=\"row py-2\">\n              <h3 className=\"col-sm text-secondary\">Dirección</h3>\n              <h2 className=\"col-sm\">{this.state.venue.address}</h2>\n            </div>\n            <div className=\"row py-2\">\n              <h3 className=\"col-sm text-secondary\">Email</h3>\n              <h2 className=\"col-sm\">{this.state.venue.email}</h2>\n            </div>\n            <div className=\"row py-2\">\n              <h3 className=\"col-sm text-secondary\">Teléfono</h3>\n              <h2 className=\"col-sm\">{this.state.venue.phone}</h2>\n            </div>\n            <div className=\"row py-2\">\n              <h3 className=\"col-sm text-secondary\">Código Zip</h3>\n              <h2 className=\"col-sm\">{this.state.venue.zipCode}</h2>\n            </div>\n            {this.state.venue.active === \"on\" ? (\n              <div className=\"row py-2\">\n                <h3 className=\"col-sm text-secondary\">Status</h3>\n                <h2 className=\"col-sm text-success\">Activa</h2>\n              </div>\n            ) : (\n              <div className=\"row py-2\">\n                <h3 className=\"col-sm text-secondary\">Status</h3>\n                <h2 className=\"col-sm text-secondary\">Desactivada</h2>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"container\">\n          <h1 className=\"py-3\">\n            <strong>Usuarios asociados</strong>\n          </h1>\n          <form className=\"form-inline py-4\" onSubmit={this.filterNames}>\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              placeholder=\"Escribe un nombre\"\n              aria-label=\"Search\"\n              onChange={(event) => this.setState({ query: event.target.value })}\n            />\n            <input\n              className=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n              value=\"Buscar\"\n            />\n          </form>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Apellido</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.filteredQuery.map((user) => {\n                return (\n                  <tr key={user.id}>\n                    <td>{user.name}</td>\n                    <td>{user.lastName}</td>\n                    <td>{user.email}</td>\n                    <td>\n                      {\" \"}\n                      <NavLink\n                        className=\"btn btn-warning mr-2\"\n                        to={{pathname:`/updateUser/${user.id}`, state:{logged: this.props.logged}}}\n                      >\n                        <i className=\"fas fa-edit\"></i>\n                      </NavLink>\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.onDelete(user.id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          {this.state.filteredQuery === null ? <p1>No hay usuarios asociados</p1> : \"\"}\n        </div>\n      </div>\n    );\n  }\n}\nexport default MasterVenue;\n","import React from 'react';\n\nconst Error =()=>{\n    return (\n        <section className=\"container\">\n            <h2>Error 404 - Pagina no encontrada</h2>\n            <p>La pagina a la que intentas acceder no existe.</p>\n        </section>\n    );\n}\nexport default Error;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport fire from '../config/firebase';\nimport {NavLink} from 'react-router-dom';\nimport sha256 from 'crypto-js/sha256';\n\nclass Login extends Component {\n\n    emailRef = React.createRef();\n    passwordRef = React.createRef();\n\n    state = {\n        user: {},\n        db: fire.firestore(),\n        logged: false\n    }\n\n    changeState = () => {\n        this.setState({\n            user: {\n                email: this.emailRef.current.value,\n                password: this.passwordRef.current.value\n            }\n        });\n    }\n\n    loginUser = (e) => {\n        e.preventDefault();\n        this.changeState(); \n\n        fire\n            .auth()\n            .signInWithEmailAndPassword(this.emailRef.current.value, sha256(this.passwordRef.current.value).toString() )\n            .then(res => {\n                this.setState({logged:true}) \n            })\n            .catch(err => {  \n                this.setState({logged:false}) \n                console.log(err) \n            });\n\n            \n    }\n\n    render() {\n        if (this.state.logged) { \n            return <Redirect to={{pathname:'/home', state:{logged: this.state.logged}}} />\n        }\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <section className=\"mx-auto my-5 card w-50 py-3\">\n                        <form className=\"d-flex flex-column justify-content-center align-items-center\" onSubmit={this.loginUser}>\n                            <h2 className=\"mb-5\">Iniciar sesión</h2>\n\n                            <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                                <label htmlFor=\"email\" className=\"font-weight-bold\">Email</label>\n                                <input className=\"form-control\" type=\"text\" name=\"email\" ref={this.emailRef} onChange={this.changeState} required/>\n                            </div>\n\n                            <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                                <label htmlFor=\"password\" className=\"font-weight-bold\">Contraseña</label>\n                                <input className=\"form-control\" type=\"password\" name=\"password\" ref={this.passwordRef} onChange={this.changeState} required/>\n                            </div>\n                            <NavLink className=\"mb-3\" to=\"/singUp\" >Registrarme</NavLink>\n                            <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\n                        </form>\n                    </section>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n}\nexport default Login;","import React, { Component } from \"react\";\nimport fire from \"../config/firebase\";\nimport { Redirect } from \"react-router\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport es from \"../config/es\";\nimport \"./validator.css\";\nimport sha256 from 'crypto-js/sha256';\n\nclass SingUp extends Component {\n  nameRef = React.createRef();\n  lastNameRef = React.createRef();\n  emailRef = React.createRef();\n  passwordRef = React.createRef();\n  passwordConfirmedRef = React.createRef();\n  validUntilRef = React.createRef();\n  campusRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    SimpleReactValidator.addLocale(\"es\", es);\n    this.validator = new SimpleReactValidator({ locale: \"es\" });\n \n  }\n\n  state = {\n    user: {},\n    venues: null,\n    db: fire.firestore(),\n    singedUp: false,\n    campusId: null,\n  };\n\n  componentDidMount() {\n    this.state.db\n      .collection(\"venues\")\n      .get()\n      .then((snapshot) => {\n        const venues = [];\n        snapshot.forEach((doc) => {\n          this.setState({ campusId: doc.id });\n          const data = doc.data();\n          venues.push(data);\n        });\n        this.setState({ venues: venues });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  changeState = () => {\n    this.setState({\n      user: {\n        name: this.nameRef.current.value,\n        lastName: this.lastNameRef.current.value,\n        email: this.emailRef.current.value,\n        password: sha256(this.passwordRef.current.value).toString(),\n        passwordConfirmed: sha256(this.passwordConfirmedRef.current.value).toString(),\n        validUntil: this.validUntilRef.current.value,\n        venueId: this.campusRef.current.value,\n      },\n      campusId: this.campusRef.current.value,\n    });\n  };\n\n  saveUser = (e) => {\n    e.preventDefault();\n    this.changeState();\n    console.log(this.state.user);\n    if (this.validator.allValid()) {\n      if (this.state.user.password === this.state.user.passwordConfirmed) {\n        fire\n          .auth()\n          .createUserWithEmailAndPassword(\n            this.state.user.email,\n            this.state.user.password\n          )\n          .then((res) => {\n            this.state.db\n              .collection(\"users\")\n              .doc(res.user.uid)\n              .set({...this.state.user, id:res.user.uid});\n            // this.state.db\n            //   .collection(\"venues\")\n            //   .doc(this.state.campusId)\n            //   .collection(\"users\")\n            //   .doc(res.user.uid)\n            //   .set({ idUser: res.user.uid });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n\n          this.setState({singedUp: true});\n      }\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n\n  render() {\n    if (this.state.singedUp) {\n      this.setState({singedUp: false});\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <section className=\"mx-auto my-5 card w-75 py-3\">\n            <form\n              className=\"d-flex flex-column justify-content-center align-items-center\"\n              onSubmit={this.saveUser}\n            >\n              <h2 className=\"mb-3\">Crea tu cuenta</h2>\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"name\" className=\"font-weight-bold\">\n                  Nombre\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"name\"\n                  ref={this.nameRef}\n                  onChange={this.changeState}\n                />\n                {this.validator.message(\n                  \"nombre\",\n                  this.state.user.name,\n                  \"required|alpha_space\"\n                )}\n              </div>\n\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"lastName\" className=\"font-weight-bold\">\n                  Apellido\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"lastName\"\n                  ref={this.lastNameRef}\n                  onChange={this.changeState}\n                />\n                {this.validator.message(\n                  \"apellido\",\n                  this.state.user.lastName,\n                  \"required|alpha_space\"\n                )}\n              </div>\n\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"email\" className=\"font-weight-bold\">\n                  Email\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"email\"\n                  ref={this.emailRef}\n                  onChange={this.changeState}\n                />\n                {this.validator.message(\n                  \"email\",\n                  this.state.user.email,\n                  \"required|email\"\n                )}\n              </div>\n\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"password\" className=\"font-weight-bold\">\n                  Contraseña\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password\"\n                  ref={this.passwordRef}\n                  onChange={this.changeState}\n                />\n                {this.validator.message(\n                  \"contraseña\",\n                  this.state.user.password,\n                  \"required|min:6\"\n                )}\n              </div>\n\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"passwordConfirmed\" className=\"font-weight-bold\">\n                  Repetir Contraseña\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"passwordConfirmed\"\n                  ref={this.passwordConfirmedRef}\n                  onChange={this.changeState}\n                />\n                {this.validator.message(\n                  \"repetir contraseña\",\n                  this.state.user.passwordConfirmed,\n                  \"required|min:6\"\n                )}\n              </div>\n\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"validUntil\" className=\"font-weight-bold\">\n                  Valido Hasta\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"date\"\n                  name=\"validUntil\"\n                  ref={this.validUntilRef}\n                  onChange={this.changeState}\n                />\n                {this.validator.message(\n                  \"valido hasta\",\n                  this.state.user.validUntil,\n                  \"required\"\n                )}\n              </div>\n\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                <label htmlFor=\"campus\" className=\"font-weight-bold\">\n                  Sedes disponibles\n                </label>\n\n                <select\n                  className=\"form-control\"\n                  name=\"campus\"\n                  ref={this.campusRef}\n                  onChange={this.changeState}\n                >\n                  {this.state.venues &&\n                    this.state.venues.map((venue) => {\n                      return (\n                        <option key={venue.venueId} value={venue.venueId}>\n                          {venue.name}\n                        </option>\n                      );\n                    })}\n                </select>\n              </div>\n\n              <input\n                type=\"submit\"\n                value=\"Register\"\n                className=\"btn btn-primary\"\n              />\n            </form>\n          </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default SingUp;\n","import React, { Component } from 'react'\nimport SimpleReactValidator from \"simple-react-validator\";\nimport es from \"../config/es\";\nimport \"./validator.css\";\nimport Navbar from \"./Navbar\";\nimport fire from \"../config/firebase\";\nimport { Redirect } from \"react-router\";\n\nexport class UpdateUser extends Component {\n\n    nameRef = React.createRef();\n    lastNameRef = React.createRef();\n    validUntilRef = React.createRef(); \n\n    constructor(props) {\n        super(props)\n        SimpleReactValidator.addLocale(\"es\", es);\n        this.validator = new SimpleReactValidator({ locale: \"es\" });\n    }\n\n    state = {\n        user: {},\n        db: fire.firestore(),\n      };\n\n    changeState = () => {\n        this.setState({\n            user: {\n                name: this.nameRef.current.value,\n                lastName: this.lastNameRef.current.value,\n                validUntil: this.validUntilRef.current.value, \n            }\n        });\n    };\n\n    componentDidMount(){\n        let userId = this.props.match.params.idUser;\n\n        this.state.db\n      .collection(\"users\")\n      .doc(userId)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          let user = {};\n          user = doc.data();\n          this.setState({ user: user });\n        } else {\n          console.log(\"No such document!\");\n        }\n      }).catch(err=>{\n        console.log(err);\n      });\n    }\n\n    updateUser = (e) => {\n        e.preventDefault();\n        this.changeState();\n\n        let userId = this.props.match.params.idUser;\n\n        if (this.validator.allValid()) {\n            this.state.db.collection(\"users\").doc(userId).update({ name: this.state.user.name, lastName: this.state.user.lastName, validUntil: this.state.user.validUntil});\n            setTimeout(function () {\n                window.location.href = \"/home\";\n            }, 1000);\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n\n    }\n\n    render() {\n        if(this.props.location.state === undefined || !this.props.location.state.logged){ \n \n            return <Redirect to='/login'/>\n          }  \n        return (\n            <div>\n                <Navbar />\n                <div className=\"container text-center\">\n                    <h1 className=\"my-5\">Modificar Usuario</h1>\n                    <form\n                        className=\"d-flex flex-column justify-content-center align-items-center\"\n                        onSubmit={this.updateUser}\n                    > \n                        <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                            <label htmlFor=\"name\" className=\"font-weight-bold\">\n                                Nombre\n                            </label>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                name=\"name\"\n                                ref={this.nameRef}\n                                onChange={this.changeState}\n                                value={this.state.user.name}\n                            />\n                            {this.validator.message(\n                                \"nombre\",\n                                this.state.user.name,\n                                \"required|alpha_space\"\n                            )}\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                            <label htmlFor=\"lastName\" className=\"font-weight-bold\">\n                                Apellido\n                            </label>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                name=\"lastName\"\n                                ref={this.lastNameRef}\n                                onChange={this.changeState}\n                                value={this.state.user.lastName}\n                            />\n                            {this.validator.message(\n                                \"apellido\",\n                                this.state.user.lastName,\n                                \"required|alpha_space\"\n                            )}\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\n                            <label htmlFor=\"validUntil\" className=\"font-weight-bold\">\n                                Valido Hasta\n                            </label>\n                            <input\n                                className=\"form-control\"\n                                type=\"date\"\n                                name=\"validUntil\"\n                                ref={this.validUntilRef}\n                                onChange={this.changeState}\n                                value={this.state.user.validUntil}\n                            />\n                            {this.validator.message(\n                                \"valido hasta\",\n                                this.state.user.validUntil,\n                                \"required\"\n                            )}\n                        </div> \n\n                        <input\n                            type=\"submit\"\n                            value=\"Register\"\n                            className=\"btn btn-primary\"\n                        />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpdateUser\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport CreateVenue from \"./components/Venues/CreateVenue\";\nimport UpdateVenue from \"./components/Venues/UpdateVenue\";\nimport MasterVenue from \"./components/Venues/MasterVenue\";\nimport Error from \"./components/Error\";\nimport Login from \"./components/Login\";\nimport SingUp from \"./components/SingUp\";\nimport UpdateUser from \"./components/UpdateUser\";\n\nclass Router extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          {/*Cambiar la ruta barra por otro componente luego*/}\n          <Route exact path=\"/\" component={Login}></Route>\n          <Route path=\"/home\" component={Home}></Route>\n          <Route path=\"/createVenue\" component={CreateVenue}></Route>\n          <Route path=\"/updateVenue/:idUpdate\" component={UpdateVenue}></Route>\n          <Route path=\"/updateUser/:idUser\" component={UpdateUser}></Route>\n          <Route path=\"/venue/:id\" component={MasterVenue}></Route>\n          <Route path=\"/login\" component={Login}></Route>\n          <Route path=\"/singUp\" component={SingUp}></Route>\n\n          <Route component={Error}></Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\nexport default Router;\n","import './App.css';\nimport  Router  from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}