{"version":3,"sources":["config/firebase.js","components/Venues/ListVenues.js","components/Venues/Venues.js","components/Navbar.js","components/Home.js","config/es.js","components/Venues/CreateVenue.js","components/Venues/UpdateVenue.js","components/Venues/MasterVenue.js","components/Error.js","components/Login.js","components/SingUp.js","components/UpdateUser.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ListVenues","state","venues","db","firestore","delete","onDelete","venueId","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","collection","doc","window","location","reload","this","get","snapshot","forEach","data","id","push","update","setState","catch","error","console","log","props","logged","className","scope","map","venue","idUpdate","name","address","city","to","pathname","activeClassName","onClick","Component","Venues","Navbar","auth","signOut","type","data-bs-toggle","logout","Home","undefined","Fragment","es","accepted","after","after_or_equal","alpha","array","before","before_or_equal","between","boolean","date","date_equals","email","in","integer","max","min","not_in","not_regex","numeric","regex","required","size","string","url","CreateVenue","nameRef","React","createRef","phoneRef","emailRef","cityRef","addressRef","zipCodeRef","activeRef","changeState","current","value","phone","zipCode","active","saveVenue","e","preventDefault","validator","allValid","set","setTimeout","href","showMessages","forceUpdate","SimpleReactValidator","addLocale","locale","onSubmit","htmlFor","ref","onChange","placeholder","message","UpdateVenue","updateVenue","match","params","exists","MasterVenue","users","query","filteredQuery","filterNames","filter","user","includes","where","aria-label","event","target","lastName","Error","Login","passwordRef","password","loginUser","signInWithEmailAndPassword","sha256","toString","res","err","SingUp","lastNameRef","passwordConfirmedRef","validUntilRef","campusRef","singedUp","campusId","passwordConfirmed","validUntil","saveUser","createUserWithEmailAndPassword","uid","UpdateUser","updateUser","userId","idUser","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7684f538.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBmRAHgir6S7esdp5ACr4OFYk7h5lcRKQY\",\r\n  authDomain: \"usersandcampusmanager.firebaseapp.com\",\r\n  projectId: \"usersandcampusmanager\",\r\n  storageBucket: \"usersandcampusmanager.appspot.com\",\r\n  messagingSenderId: \"1016626475792\",\r\n  appId: \"1:1016626475792:web:b73cd58a990611ac446b95\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;\r\n","import React, { Component } from \"react\";\r\nimport fire from \"../../config/firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass ListVenues extends Component {\r\n  state = {\r\n    venues: null,\r\n    db: fire.firestore(),\r\n    delete: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.db\r\n      .collection(\"venues\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const venues = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = { ...doc.data(), id: doc.id };\r\n          venues.push(data);\r\n          this.state.db.collection(\"venues\").doc(doc.id).update({\r\n            venueId: doc.id,\r\n          });\r\n        });\r\n        this.setState({ venues: venues });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onDelete = (venueId) => {\r\n    Swal.fire({\r\n      title: \"Estás seguro de eliminar la sede?\",\r\n      text: \"Serán cambios irreversibles!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Si, eliminar!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.state.db.collection(\"venues\").doc(venueId).delete();\r\n        window.location.reload(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() { \r\n    if(!this.props.logged){\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Dirección</th>\r\n            <th scope=\"col\">Ciudad</th>\r\n            <th scope=\"col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.venues &&\r\n            this.state.venues.map((venue) => {\r\n              const id = \"venue/\" + venue.id;\r\n              const idUpdate = \"updateVenue/\" + venue.id;\r\n              return (\r\n                <tr key={venue.id}>\r\n                  <td className=\"align-middle\">{venue.name}</td>\r\n                  <td className=\"align-middle\">{venue.address}</td>\r\n                  <td className=\"align-middle\">{venue.city}</td>\r\n                  <td>\r\n                    <NavLink\r\n                      className=\"btn btn-primary mr-2\"\r\n                      to={{pathname:id, state:{logged: this.props.logged}}}\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fas fa-eye\"></i>\r\n                    </NavLink>\r\n                    <NavLink className=\"btn btn-warning mr-2\" to={{pathname:idUpdate, state:{logged: this.props.logged}}}>\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </NavLink>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.onDelete(venue.id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\nexport default ListVenues;\r\n","import ListVenues from \"./ListVenues\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Venues = (props) => {\r\n\r\n  if(props.logged){\r\n    return ( \r\n      <div>\r\n        <div className=\"d-flex py-5\">\r\n          <h1 className=\"\">Sedes</h1>\r\n          <NavLink\r\n            className=\"nav-link ml-auto p-2\"\r\n            to={{pathname:\"/createVenue\", state:{logged: props.logged}}}\r\n            activeClassName=\"active\"\r\n          >\r\n            Crear Sede\r\n          </NavLink>\r\n        </div>\r\n        <ListVenues logged={props.logged} />\r\n      </div>\r\n    );\r\n  }else{\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  \r\n};\r\nexport default Venues;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport fire from \"../config/firebase\";\r\n\r\nclass Navbar extends Component {\r\n  logout() {\r\n    fire.auth().signOut();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark container-fluid\">\r\n        <div className=\"container\">\r\n          <NavLink className=\"navbar-brand\" to=\"/\" activeClassName=\"active\">\r\n            User's & Campus Manager\r\n          </NavLink>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link\"\r\n                  to=\"/home\"\r\n                  activeClassName=\"active\"\r\n                >\r\n                  Inicio\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link\"\r\n                  to=\"/\"\r\n                  activeClassName=\"active\"\r\n                  onClick={this.logout}\r\n                >\r\n                  Cerrar sesión\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport Venues from \"./Venues/Venues\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass Home extends Component {\r\n  \r\n  state={\r\n    logged:true\r\n  }\r\n \r\n  render() {\r\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \r\n      this.setState({logged:false});\r\n      return <Redirect to='/login'/>\r\n    } \r\n    return (\r\n      <React.Fragment>\r\n        <Navbar />\r\n\r\n        <div className=\"container\">\r\n          <section>\r\n            <Venues logged={this.state.logged} />\r\n          </section>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","  const es ={\r\n    accepted             : ':attribute debe ser aceptado.',\r\n    after                : ':attribute debe ser una fecha posterior a :date.',\r\n    after_or_equal       : ':attribute debe ser una fecha posterior o igual a :date.',\r\n    alpha                : ':attribute sólo debe contener letras.',\r\n    // alpha_space          : 'The :attribute may only contain letters and spaces.',\r\n    // alpha_num            : 'The :attribute may only contain letters and numbers.',\r\n    // alpha_num_space      : 'The :attribute may only contain letters, numbers, and spaces.',\r\n    // alpha_num_dash       : 'The :attribute may only contain letters, numbers, and dashes.',\r\n    // alpha_num_dash_space : 'The :attribute may only contain letters, numbers, dashes, and spaces.',\r\n    array                : ':attribute debe ser un conjunto.',\r\n    before               : ':attribute debe ser una fecha anterior a :date.',\r\n    before_or_equal      : ':attribute debe ser una fecha anterior o igual a :date.',\r\n    between              : ':attribute tiene que estar entre :min - :max:type.',\r\n    boolean              : 'El campo :attribute debe tener un valor verdadero o falso.',\r\n    // card_exp             : 'The :attribute must be a valid expiration date.',\r\n    // card_num             : 'The :attribute must be a valid credit card number.',\r\n    // currency             : 'The :attribute must be a valid currency.',\r\n    date                 : ':attribute no es una fecha válida.',\r\n    date_equals          : ':attribute debe ser una fecha igual a :date.',\r\n    email                : ':attribute no es un correo válido',\r\n    in                   : ':attribute es inválido :values.',\r\n    integer              : ':attribute debe ser un número entero.',\r\n    max                  : ':attribute no debe ser mayor a :max:type.',\r\n    min                  : 'El tamaño de :attribute debe ser de al menos :min:type.',\r\n    not_in               : ':attribute es inválido :values.',\r\n    not_regex            : 'El formato del campo :attribute no es válido.',\r\n    numeric              : ':attribute debe ser numérico.',\r\n    // phone                : 'The :attribute must be a valid phone number.',\r\n    regex                : 'El formato de :attribute es inválido.',\r\n    required             : 'El campo :attribute es obligatorio.',\r\n    size                 : 'El tamaño de :attribute debe ser :size:type.',\r\n    string               : 'El campo :attribute debe ser una cadena de caracteres.',\r\n    // typeof               : 'The :attribute is not the correct type of :type.',\r\n    url                  : 'El formato :attribute es inválido.',\r\n  }\r\n  export default es;","import React, { Component } from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport fire from \"../../config/firebase\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport es from \"../../config/es\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass CreateVenue extends Component {\r\n  constructor() {\r\n    super();\r\n    SimpleReactValidator.addLocale(\"es\", es);\r\n    this.validator = new SimpleReactValidator({ locale: \"es\" });\r\n  }\r\n\r\n  nameRef = React.createRef();\r\n  phoneRef = React.createRef();\r\n  emailRef = React.createRef();\r\n  cityRef = React.createRef();\r\n  addressRef = React.createRef();\r\n  zipCodeRef = React.createRef();\r\n  activeRef = React.createRef();\r\n\r\n  state = {\r\n    venue: {},\r\n    db: fire.firestore(),\r\n  };\r\n\r\n  changeState = () => {\r\n    this.setState({\r\n      venue: {\r\n        name: this.nameRef.current.value,\r\n        phone: this.phoneRef.current.value,\r\n        email: this.emailRef.current.value,\r\n        city: this.cityRef.current.value,\r\n        address: this.addressRef.current.value,\r\n        zipCode: this.zipCodeRef.current.value,\r\n        active: this.activeRef.current.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  saveVenue = (e) => {\r\n    e.preventDefault();\r\n    this.changeState();\r\n    if (this.validator.allValid()) {\r\n      this.state.db.collection(\"venues\").doc().set(this.state.venue);\r\n      setTimeout(function () {\r\n        window.location.href = \"/home\";\r\n      }, 1000);\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \r\n \r\n      return <Redirect to='/login'/>\r\n    }  \r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"container text-center\">\r\n          <h1 className=\"my-5\">Crear sede</h1>\r\n          <div className=\"card col-md-12 py-5 my-5\">\r\n            <form onSubmit={this.saveVenue}>\r\n              <div className=\"form-row col-md-12\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"name\">Nombre</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    ref={this.nameRef}\r\n                    onChange={this.changeState}\r\n                    placeholder=\"Sede Manglares\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"nombre\",\r\n                    this.state.venue.name,\r\n                    \"required|alpha_num_space\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"phone\">Teléfono</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    ref={this.phoneRef}\r\n                    onChange={this.changeState}\r\n                    placeholder=\"(+57) 555 555 55 55\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"teléfono\",\r\n                    this.state.venue.phone,\r\n                    \"required|phone\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row col-md-12\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.changeState}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"correo\",\r\n                    this.state.venue.email,\r\n                    \"required|email\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group col-md-8\">\r\n                  <label htmlFor=\"address\">Dirección</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    ref={this.addressRef}\r\n                    onChange={this.changeState}\r\n                    placeholder=\"Avenida 555 calle 55\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"dirección\",\r\n                    this.state.venue.address,\r\n                    \"required\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row col-md-12\">\r\n                <div className=\"form-group col-md-8\">\r\n                  <label htmlFor=\"city\">Ciudad</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={this.cityRef}\r\n                    onChange={this.changeState}\r\n                    name=\"city\"\r\n                    placeholder=\"Cali\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"ciudad\",\r\n                    this.state.venue.city,\r\n                    \"required\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"zipCode\">Código Zip</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"zipCode\"\r\n                    ref={this.zipCodeRef}\r\n                    onChange={this.changeState}\r\n                    placeholder=\"760026\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"código zip\",\r\n                    this.state.venue.zipCode,\r\n                    \"required|numeric\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    name=\"active\"\r\n                    ref={this.activeRef}\r\n                    onChange={this.changeState}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"active\">\r\n                    Activa\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Crear sede\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateVenue;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport es from \"../../config/es\";\r\nimport fire from \"../../config/firebase\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass UpdateVenue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    SimpleReactValidator.addLocale(\"es\", es);\r\n    this.validator = new SimpleReactValidator({ locale: \"es\" });\r\n  }\r\n\r\n  nameRef = React.createRef();\r\n  phoneRef = React.createRef();\r\n  emailRef = React.createRef();\r\n  cityRef = React.createRef();\r\n  addressRef = React.createRef();\r\n  zipCodeRef = React.createRef();\r\n  activeRef = React.createRef();\r\n\r\n  state = {\r\n    venue: {},\r\n    db: fire.firestore(),\r\n  };\r\n\r\n  changeState = () => {\r\n    this.setState({\r\n      venue: {\r\n        name: this.nameRef.current.value,\r\n        phone: this.phoneRef.current.value,\r\n        email: this.emailRef.current.value,\r\n        city: this.cityRef.current.value,\r\n        address: this.addressRef.current.value,\r\n        zipCode: this.zipCodeRef.current.value,\r\n        active: this.activeRef.current.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let venueId = this.props.match.params.idUpdate\r\n    this.state.db\r\n      .collection(\"venues\")\r\n      .doc(venueId)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          let venue = {};\r\n          venue = doc.data();\r\n          this.setState({ venue: venue });\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      });\r\n  }\r\n\r\n  updateVenue = (e) => {\r\n    e.preventDefault();\r\n    this.changeState();\r\n    let id = this.props.match.params.idUpdate\r\n    if (this.validator.allValid()) {\r\n      this.state.db.collection(\"venues\").doc(id).set({...this.state.venue, venueId: id});\r\n      setTimeout(function () {\r\n        window.location.href = \"/home\";\r\n      }, 1000);\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \r\n \r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"container text-center\">\r\n          <h1 className=\"my-5\">Modificar sede</h1>\r\n          <div className=\"card col-md-12 py-5 my-5\">\r\n            <form onSubmit={this.updateVenue}>\r\n              <div className=\"form-row col-md-12\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"name\">Nombre</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    ref={this.nameRef}\r\n                    onChange={this.changeState}\r\n                    value={this.state.venue.name}\r\n                  />\r\n                  {this.validator.message(\r\n                    \"nombre\",\r\n                    this.state.venue.name,\r\n                    \"required|alpha_num_space\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"phone\">Teléfono</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    ref={this.phoneRef}\r\n                    onChange={this.changeState}\r\n                    value={this.state.venue.phone}\r\n                  />\r\n                  {this.validator.message(\r\n                    \"teléfono\",\r\n                    this.state.venue.phone,\r\n                    \"required|phone\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row col-md-12\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.changeState}\r\n                    value={this.state.venue.email}\r\n                  />\r\n                  {this.validator.message(\r\n                    \"correo\",\r\n                    this.state.venue.email,\r\n                    \"required|email\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group col-md-8\">\r\n                  <label htmlFor=\"address\">Dirección</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    ref={this.addressRef}\r\n                    onChange={this.changeState}\r\n                    value={this.state.venue.address}\r\n                  />\r\n                  {this.validator.message(\r\n                    \"dirección\",\r\n                    this.state.venue.address,\r\n                    \"required\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row col-md-12\">\r\n                <div className=\"form-group col-md-8\">\r\n                  <label htmlFor=\"city\">Ciudad</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={this.cityRef}\r\n                    onChange={this.changeState}\r\n                    name=\"city\"\r\n                    value={this.state.venue.city}\r\n                  />\r\n                  {this.validator.message(\r\n                    \"ciudad\",\r\n                    this.state.venue.city,\r\n                    \"required\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"zipCode\">Código Zip</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"zipCode\"\r\n                    ref={this.zipCodeRef}\r\n                    onChange={this.changeState}\r\n                    value={this.state.venue.zipCode}\r\n                  />\r\n                  {this.validator.message(\r\n                    \"código zip\",\r\n                    this.state.venue.zipCode,\r\n                    \"required|numeric\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    name=\"active\"\r\n                    ref={this.activeRef}\r\n                    onChange={this.changeState}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"active\">\r\n                    Activa\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Modificar\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateVenue;\r\n","import React, { Component } from \"react\";\r\nimport fire from \"../../config/firebase\";\r\nimport Navbar from \"../Navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass MasterVenue extends Component {\r\n \r\n  state = {\r\n    venue: {},\r\n    db: fire.firestore(),\r\n    users: null,\r\n    query: \"\",\r\n    filteredQuery: [],\r\n  };\r\n\r\n  filterNames = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      filteredQuery: this.state.users.filter((user) =>\r\n        user.name.includes(this.state.query)\r\n      ),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let venueId = this.props.match.params.id;\r\n    this.state.db\r\n      .collection(\"venues\")\r\n      .doc(venueId)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          let venue = {};\r\n          venue = doc.data();\r\n          this.setState({ venue: venue });\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      });\r\n    this.state.db\r\n      .collection(\"users\")\r\n      .where(\"venueId\", \"==\", venueId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const users = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          users.push(data);\r\n        });\r\n        this.setState({ users: users });\r\n        this.setState({\r\n          filteredQuery: this.state.users.filter((user) =>\r\n            user.name.includes(this.state.query)\r\n          ),\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    if(this.props.location.state === undefined || !this.props.location.state.logged){ \r\n \r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"container text-center py-5\">\r\n          <div className=\"card\">\r\n            <h1 className=\"py-3 text-primary\">\r\n              <strong>{this.state.venue.name}</strong>\r\n            </h1>\r\n            <div className=\"row py-2\">\r\n              <h3 className=\"col-sm text-secondary\">Ciudad</h3>\r\n              <h2 className=\"col-sm\">{this.state.venue.city}</h2>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <h3 className=\"col-sm text-secondary\">Dirección</h3>\r\n              <h2 className=\"col-sm\">{this.state.venue.address}</h2>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <h3 className=\"col-sm text-secondary\">Email</h3>\r\n              <h2 className=\"col-sm\">{this.state.venue.email}</h2>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <h3 className=\"col-sm text-secondary\">Teléfono</h3>\r\n              <h2 className=\"col-sm\">{this.state.venue.phone}</h2>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <h3 className=\"col-sm text-secondary\">Código Zip</h3>\r\n              <h2 className=\"col-sm\">{this.state.venue.zipCode}</h2>\r\n            </div>\r\n            {this.state.venue.active === \"on\" ? (\r\n              <div className=\"row py-2\">\r\n                <h3 className=\"col-sm text-secondary\">Status</h3>\r\n                <h2 className=\"col-sm text-success\">Activa</h2>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row py-2\">\r\n                <h3 className=\"col-sm text-secondary\">Status</h3>\r\n                <h2 className=\"col-sm text-secondary\">Desactivada</h2>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h1 className=\"py-3\">\r\n            <strong>Usuarios asociados</strong>\r\n          </h1>\r\n          <form className=\"form-inline py-4\" onSubmit={this.filterNames}>\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Escribe un nombre\"\r\n              aria-label=\"Search\"\r\n              onChange={(event) => this.setState({ query: event.target.value })}\r\n            />\r\n            <input\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n              value=\"Buscar\"\r\n            />\r\n          </form>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Nombre</th>\r\n                <th scope=\"col\">Apellido</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.filteredQuery.map((user) => {\r\n                return (\r\n                  <tr key={user.id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.lastName}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      {\" \"}\r\n                      <NavLink\r\n                        className=\"btn btn-warning mr-2\"\r\n                        to={{pathname:`/updateUser/${user.id}`, state:{logged: this.props.logged}}}\r\n                      >\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </NavLink>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => this.onDelete(user.id)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          {this.state.filteredQuery === null ? <p1>No hay usuarios asociados</p1> : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MasterVenue;\r\n","import React from 'react';\r\n\r\nconst Error =()=>{\r\n    return (\r\n        <section className=\"container\">\r\n            <h2>Error 404 - Pagina no encontrada</h2>\r\n            <p>La pagina a la que intentas acceder no existe.</p>\r\n        </section>\r\n    );\r\n}\r\nexport default Error;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport fire from '../config/firebase';\r\nimport {NavLink} from 'react-router-dom';\r\nimport sha256 from 'crypto-js/sha256';\r\n\r\nclass Login extends Component {\r\n\r\n    emailRef = React.createRef();\r\n    passwordRef = React.createRef();\r\n\r\n    state = {\r\n        user: {},\r\n        db: fire.firestore(),\r\n        logged: false\r\n    }\r\n\r\n    changeState = () => {\r\n        this.setState({\r\n            user: {\r\n                email: this.emailRef.current.value,\r\n                password: this.passwordRef.current.value\r\n            }\r\n        });\r\n    }\r\n\r\n    loginUser = (e) => {\r\n        e.preventDefault();\r\n        this.changeState(); \r\n\r\n        fire\r\n            .auth()\r\n            .signInWithEmailAndPassword(this.emailRef.current.value, sha256(this.passwordRef.current.value).toString() )\r\n            .then(res => {\r\n                this.setState({logged:true}) \r\n            })\r\n            .catch(err => {  \r\n                this.setState({logged:false}) \r\n                console.log(err) \r\n            });\r\n\r\n            \r\n    }\r\n\r\n    render() {\r\n        if (this.state.logged) { \r\n            return <Redirect to={{pathname:'/home', state:{logged: this.state.logged}}} />\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <section className=\"mx-auto my-5 card w-50 py-3\">\r\n                        <form className=\"d-flex flex-column justify-content-center align-items-center\" onSubmit={this.loginUser}>\r\n                            <h2 className=\"mb-5\">Iniciar sesión</h2>\r\n\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                                <label htmlFor=\"email\" className=\"font-weight-bold\">Email</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"email\" ref={this.emailRef} onChange={this.changeState} required/>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                                <label htmlFor=\"password\" className=\"font-weight-bold\">Contraseña</label>\r\n                                <input className=\"form-control\" type=\"password\" name=\"password\" ref={this.passwordRef} onChange={this.changeState} required/>\r\n                            </div>\r\n                            <NavLink className=\"mb-3\" to=\"/singUp\" >Registrarme</NavLink>\r\n                            <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport fire from \"../config/firebase\";\r\nimport { Redirect } from \"react-router\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport es from \"../config/es\";\r\nimport \"./validator.css\";\r\nimport sha256 from 'crypto-js/sha256';\r\n\r\nclass SingUp extends Component {\r\n  nameRef = React.createRef();\r\n  lastNameRef = React.createRef();\r\n  emailRef = React.createRef();\r\n  passwordRef = React.createRef();\r\n  passwordConfirmedRef = React.createRef();\r\n  validUntilRef = React.createRef();\r\n  campusRef = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    SimpleReactValidator.addLocale(\"es\", es);\r\n    this.validator = new SimpleReactValidator({ locale: \"es\" });\r\n \r\n  }\r\n\r\n  state = {\r\n    user: {},\r\n    venues: null,\r\n    db: fire.firestore(),\r\n    singedUp: false,\r\n    campusId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.db\r\n      .collection(\"venues\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const venues = [];\r\n        snapshot.forEach((doc) => {\r\n          this.setState({ campusId: doc.id });\r\n          const data = doc.data();\r\n          venues.push(data);\r\n        });\r\n        this.setState({ venues: venues });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  changeState = () => {\r\n    this.setState({\r\n      user: {\r\n        name: this.nameRef.current.value,\r\n        lastName: this.lastNameRef.current.value,\r\n        email: this.emailRef.current.value,\r\n        password: sha256(this.passwordRef.current.value).toString(),\r\n        passwordConfirmed: sha256(this.passwordConfirmedRef.current.value).toString(),\r\n        validUntil: this.validUntilRef.current.value,\r\n        venueId: this.campusRef.current.value,\r\n      },\r\n      campusId: this.campusRef.current.value,\r\n    });\r\n  };\r\n\r\n  saveUser = (e) => {\r\n    e.preventDefault();\r\n    this.changeState();\r\n    console.log(this.state.user);\r\n    if (this.validator.allValid()) {\r\n      if (this.state.user.password === this.state.user.passwordConfirmed) {\r\n        fire\r\n          .auth()\r\n          .createUserWithEmailAndPassword(\r\n            this.state.user.email,\r\n            this.state.user.password\r\n          )\r\n          .then((res) => {\r\n            this.state.db\r\n              .collection(\"users\")\r\n              .doc(res.user.uid)\r\n              .set({...this.state.user, id:res.user.uid});\r\n            // this.state.db\r\n            //   .collection(\"venues\")\r\n            //   .doc(this.state.campusId)\r\n            //   .collection(\"users\")\r\n            //   .doc(res.user.uid)\r\n            //   .set({ idUser: res.user.uid });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n\r\n          this.setState({singedUp: true});\r\n      }\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.singedUp) {\r\n      this.setState({singedUp: false});\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <section className=\"mx-auto my-5 card w-75 py-3\">\r\n            <form\r\n              className=\"d-flex flex-column justify-content-center align-items-center\"\r\n              onSubmit={this.saveUser}\r\n            >\r\n              <h2 className=\"mb-3\">Crea tu cuenta</h2>\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"name\" className=\"font-weight-bold\">\r\n                  Nombre\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  ref={this.nameRef}\r\n                  onChange={this.changeState}\r\n                />\r\n                {this.validator.message(\r\n                  \"nombre\",\r\n                  this.state.user.name,\r\n                  \"required|alpha_space\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"lastName\" className=\"font-weight-bold\">\r\n                  Apellido\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  ref={this.lastNameRef}\r\n                  onChange={this.changeState}\r\n                />\r\n                {this.validator.message(\r\n                  \"apellido\",\r\n                  this.state.user.lastName,\r\n                  \"required|alpha_space\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"email\" className=\"font-weight-bold\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  ref={this.emailRef}\r\n                  onChange={this.changeState}\r\n                />\r\n                {this.validator.message(\r\n                  \"email\",\r\n                  this.state.user.email,\r\n                  \"required|email\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"password\" className=\"font-weight-bold\">\r\n                  Contraseña\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  ref={this.passwordRef}\r\n                  onChange={this.changeState}\r\n                />\r\n                {this.validator.message(\r\n                  \"contraseña\",\r\n                  this.state.user.password,\r\n                  \"required|min:6\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"passwordConfirmed\" className=\"font-weight-bold\">\r\n                  Repetir Contraseña\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"passwordConfirmed\"\r\n                  ref={this.passwordConfirmedRef}\r\n                  onChange={this.changeState}\r\n                />\r\n                {this.validator.message(\r\n                  \"repetir contraseña\",\r\n                  this.state.user.passwordConfirmed,\r\n                  \"required|min:6\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"validUntil\" className=\"font-weight-bold\">\r\n                  Valido Hasta\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  name=\"validUntil\"\r\n                  ref={this.validUntilRef}\r\n                  onChange={this.changeState}\r\n                />\r\n                {this.validator.message(\r\n                  \"valido hasta\",\r\n                  this.state.user.validUntil,\r\n                  \"required\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                <label htmlFor=\"campus\" className=\"font-weight-bold\">\r\n                  Sedes disponibles\r\n                </label>\r\n\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"campus\"\r\n                  ref={this.campusRef}\r\n                  onChange={this.changeState}\r\n                >\r\n                  {this.state.venues &&\r\n                    this.state.venues.map((venue) => {\r\n                      return (\r\n                        <option key={venue.venueId} value={venue.venueId}>\r\n                          {venue.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                className=\"btn btn-primary\"\r\n              />\r\n            </form>\r\n          </section>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default SingUp;\r\n","import React, { Component } from 'react'\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport es from \"../config/es\";\r\nimport \"./validator.css\";\r\nimport Navbar from \"./Navbar\";\r\nimport fire from \"../config/firebase\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport class UpdateUser extends Component {\r\n\r\n    nameRef = React.createRef();\r\n    lastNameRef = React.createRef();\r\n    validUntilRef = React.createRef(); \r\n\r\n    constructor(props) {\r\n        super(props)\r\n        SimpleReactValidator.addLocale(\"es\", es);\r\n        this.validator = new SimpleReactValidator({ locale: \"es\" });\r\n    }\r\n\r\n    state = {\r\n        user: {},\r\n        db: fire.firestore(),\r\n      };\r\n\r\n    changeState = () => {\r\n        this.setState({\r\n            user: {\r\n                name: this.nameRef.current.value,\r\n                lastName: this.lastNameRef.current.value,\r\n                validUntil: this.validUntilRef.current.value, \r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        let userId = this.props.match.params.idUser;\r\n\r\n        this.state.db\r\n      .collection(\"users\")\r\n      .doc(userId)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          let user = {};\r\n          user = doc.data();\r\n          this.setState({ user: user });\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n    updateUser = (e) => {\r\n        e.preventDefault();\r\n        this.changeState();\r\n\r\n        let userId = this.props.match.params.idUser;\r\n\r\n        if (this.validator.allValid()) {\r\n            this.state.db.collection(\"users\").doc(userId).update({ name: this.state.user.name, lastName: this.state.user.lastName, validUntil: this.state.user.validUntil});\r\n            setTimeout(function () {\r\n                window.location.href = \"/home\";\r\n            }, 1000);\r\n        } else {\r\n            this.validator.showMessages();\r\n            this.forceUpdate();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.props.location.state === undefined || !this.props.location.state.logged){ \r\n \r\n            return <Redirect to='/login'/>\r\n          }  \r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"container text-center\">\r\n                    <h1 className=\"my-5\">Modificar Usuario</h1>\r\n                    <form\r\n                        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n                        onSubmit={this.updateUser}\r\n                    > \r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                            <label htmlFor=\"name\" className=\"font-weight-bold\">\r\n                                Nombre\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                ref={this.nameRef}\r\n                                onChange={this.changeState}\r\n                                value={this.state.user.name}\r\n                            />\r\n                            {this.validator.message(\r\n                                \"nombre\",\r\n                                this.state.user.name,\r\n                                \"required|alpha_space\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                            <label htmlFor=\"lastName\" className=\"font-weight-bold\">\r\n                                Apellido\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                ref={this.lastNameRef}\r\n                                onChange={this.changeState}\r\n                                value={this.state.user.lastName}\r\n                            />\r\n                            {this.validator.message(\r\n                                \"apellido\",\r\n                                this.state.user.lastName,\r\n                                \"required|alpha_space\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                            <label htmlFor=\"validUntil\" className=\"font-weight-bold\">\r\n                                Valido Hasta\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"validUntil\"\r\n                                ref={this.validUntilRef}\r\n                                onChange={this.changeState}\r\n                                value={this.state.user.validUntil}\r\n                            />\r\n                            {this.validator.message(\r\n                                \"valido hasta\",\r\n                                this.state.user.validUntil,\r\n                                \"required\"\r\n                            )}\r\n                        </div> \r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Register\"\r\n                            className=\"btn btn-primary\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport CreateVenue from \"./components/Venues/CreateVenue\";\r\nimport UpdateVenue from \"./components/Venues/UpdateVenue\";\r\nimport MasterVenue from \"./components/Venues/MasterVenue\";\r\nimport Error from \"./components/Error\";\r\nimport Login from \"./components/Login\";\r\nimport SingUp from \"./components/SingUp\";\r\nimport UpdateUser from \"./components/UpdateUser\";\r\n\r\nclass Router extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/*Cambiar la ruta barra por otro componente luego*/}\r\n          <Route exact path=\"/\" component={Login}></Route>\r\n          <Route path=\"/home\" component={Home}></Route>\r\n          <Route path=\"/createVenue\" component={CreateVenue}></Route>\r\n          <Route path=\"/updateVenue/:idUpdate\" component={UpdateVenue}></Route>\r\n          <Route path=\"/updateUser/:idUser\" component={UpdateUser}></Route>\r\n          <Route path=\"/venue/:id\" component={MasterVenue}></Route>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/singUp\" component={SingUp}></Route>\r\n\r\n          <Route component={Error}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default Router;\r\n","import './App.css';\r\nimport  Router  from './Router';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}